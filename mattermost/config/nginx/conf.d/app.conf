# proxy cache
proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=mattermost_cache:10m max_size=3g inactive=120m use_temp_path=off;

upstream backend {
     ip_hash;server dockerized-nginx-php-mysql-phpmyadmin-mailcow-app-1:9000;
server dockerized-nginx-php-mysql-phpmyadmin-mailcow-app-2:9000;
server dockerized-nginx-php-mysql-phpmyadmin-mailcow-app-3:9000;
server dockerized-nginx-php-mysql-phpmyadmin-mailcow-app-4:9000;
server dockerized-nginx-php-mysql-phpmyadmin-mailcow-app-5:9000;
}

upstream docker_phpmyadmin {
    server phpmyadmin:443;
}

# upstream used in proxy_pass below
upstream backend {
    # ip where Mattermost is running; this relies on a working DNS inside the Docker network
    # and uses the hostname of the mattermost container (see service name in docker-compose.yml)
    server mattermost:8065;
    keepalive 64;
}

# Connection limitation for a specific remote address
limit_conn_zone $binary_remote_addr zone=one:1m;

# upstream docker_nginx_mailcow {
#     server mailcowdockerized-nginx-mailcow-1:8443;
# }

server {
    listen 80;
    server_name engloset.com;
    location = /robots.txt {
        add_header Content-Type text/plain;
        return 200 "User-agent: *\nDisallow: /";
    }

    return 301 https://$server_name$request_uri;
    
}

server {
    server_name engloset.com;
    listen 443 ssl http2;
    # disable nginx version
    server_tokens off;
    # disable nginx version
    location = /robots.txt {
        add_header Content-Type text/plain;
        return 200 "User-agent: *\nDisallow: /";
    }
    root /var/www;

    location ^~ /phpmyadmin/ {
        # (START) some queries don't work when modsecurity is on
        modsecurity off;
        # (END) some queries don't work when modsecurity is on


        # (START) large databases might demand long time and large memory
        client_max_body_size 100m;
        client_body_buffer_size 10M;
        proxy_read_timeout 6000;
        proxy_send_timeout 6000;
        # (END) large databases might demand long time and large memory

        rewrite /phpmyadmin/?(.*)$ /$1 break;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header Host $host;
        proxy_pass https://docker_phpmyadmin;
        proxy_redirect off;

        # deny all but a certain ip
        # Authentication
        # auth_basic on; user1:HelloWorld123
        # auth_basic_user_file /var/www/.nginxusers;
        # Authentication
    }

    # location ^~ /mailcow {

    #     rewrite /mailcow/?(.*)$ /$1 break;
    #     proxy_set_header X-Real-IP $remote_addr;
    #     proxy_set_header X-Forwarded-For $remote_addr;
    #     proxy_set_header Host $host;
    #     proxy_pass https://docker_nginx_mailcow;
    #     sub_filter 'action="/'  'action="/mailcow/';
    #     sub_filter 'href="/'  'href="/mailcow/';
    #     sub_filter 'src="/'  'src="/mailcow/';
    #     sub_filter_once off;
    # }
    # Mode Security is going to be off temporary
    modsecurity off;
    modsecurity_rules_file /etc/nginx/modsec/main.conf;

    location / {

        index index.php;
        try_files $uri $uri/ /index.php;

         # (START) large databases might demand long time and large memory
        client_max_body_size 100m;
        client_body_buffer_size 10M;
        proxy_read_timeout 6000;
        proxy_send_timeout 6000;
        # (END) large databases might demand long time and large memory


    }
    # self-issued ssl certificate
    ssl_certificate /usr/ssl/www.engloset.com/www_engloset_com.crt;
    ssl_certificate_key /usr/ssl/www.engloset.com/engloset.com.key;
    ssl_protocols TLSv1.2;
    # self-issued ssl certificate

    location ^~ /mail {
        rewrite ^(.*) https://mailservice8.irandns.com/roundcube/ permanent;
    }

    location ^~ /mail/ {
        rewrite ^(.*) https://mailservice8.irandns.com/roundcube/ permanent;
    }


    # optimizing the server work load
    ssl_session_timeout 15m;
    ssl_session_cache shared:SSL:50m;
    client_body_buffer_size 32k;
    client_header_buffer_size 8k;
    client_max_body_size 500k;
    large_client_header_buffers 8 64k;

    # optimizing the server work load

    #prevent clickjacking
    add_header X-Frame-Options "SAMEORIGIN";
    #prevent clickjacking

    # impose ssl
    add_header Strict-Transport-Security "max-age=31536000; includeSubdomains; preload";
    # impose ssl

    #impose content security policy
    # add_header X-XSS-Protection "1;mode=block";
    add_header X-XSS-Protection "0;";
    #impose content security policy

    # Set the request keep alive timeout to 1000. The default value is 100
    keepalive_requests 1000;


    error_log /var/log/nginx/error.log;
    access_log /var/log/nginx/access.log;

    error_page 404 error.html;
    location = /error.html {
        root /var/www;
    }


    location ~* \.(ico|css|js|gif|jpe?g|png)$ {
        expires 10d;
    }


    # (START) distributing load among different servers
    location ~* \.php$ {
        include fastcgi_params;
        try_files $uri $uri/ /index.php?$args;
        fastcgi_index index.php?$args;
        fastcgi_param QUERY_STRING $query_string;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_pass backend;
        
        fastcgi_buffers 16 16k; 
        fastcgi_buffer_size 32k;

    }
    # (END) distributing load among the following servers

    location ~* /\.ht {
        deny all;
    }

    
}

server {
    listen 80;
    server_name mm.engloset.me;
    location = /robots.txt {
        add_header Content-Type text/plain;
        return 200 "User-agent: *\nDisallow: /";
    }

    error_log /var/log/nginx/error_mailcow.log;
    access_log /var/log/nginx/access_mailcow.log;
    return 301 https://$server_name$request_uri;
}

server {
    server_name mm.engloset.me;
    listen 443 ssl http2 default_server;
    listen [::]:443 ssl http2 default_server;

    # logging
    access_log /var/log/nginx/mm.access.log;
    error_log /var/log/nginx/mm.error.log warn;
    
    # gzip for performance
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml application/json application/javascript application/rss+xml application/atom+xml image/svg+xml;

    # self-issued ssl certificate
    ssl_certificate /usr/ssl/mm.engloset.me/mm_engloset_me.crt;
    ssl_certificate_key /usr/ssl/mm.engloset.me/mm.engloset.me.key;
    ssl_protocols TLSv1.2;

    # intermediate configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

    # certs sent to the client in SERVER HELLO are concatenated in ssl_certificate
    ssl_certificate /cert.pem;
    ssl_certificate_key /key.pem;

    # enable TLSv1.3's 0-RTT. Use $ssl_early_data when reverse proxying to prevent replay attacks.
    # https://nginx.org/en/docs/http/ngx_http_ssl_module.html#ssl_early_data
    ssl_early_data on;

    # verify chain of trust of OCSP response using Root CA and Intermediate certs
    #ssl_trusted_certificate /etc/ssl/certs/ca-certificates.crt;

    ## security headers
    # https://securityheaders.com/
    # https://scotthelme.co.uk/tag/security-headers/
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy no-referrer;
    add_header Strict-Transport-Security "max-age=63072000" always;
    add_header Permissions-Policy "interest-cohort=()";

    # OCSP stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    #resolver 1.1.1.1;

    ## locations
    # ACME-challenge
    location ^~ /.well-known {
        default_type "text/plain";
        root /usr/share/nginx/html;
        allow all;
    }

    # self-issued ssl certificate
    proxy_buffer_size 128k;
    proxy_buffers 64 512k;
    proxy_busy_buffers_size 512k;
    location = /robots.txt {
        add_header Content-Type text/plain;
        return 200 "User-agent: *\nDisallow: /";
    }

    location ~ /api/v[0-9]+/(users/)?websocket$ {
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        client_max_body_size 50M;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Frame-Options SAMEORIGIN;
        proxy_set_header Early-Data $ssl_early_data;
        proxy_buffers 256 16k;
        proxy_buffer_size 16k;
        client_body_timeout 60;
        send_timeout 300;
        lingering_timeout 5;
        proxy_connect_timeout 90;
        proxy_send_timeout 300;
        proxy_read_timeout 90s;
        proxy_http_version 1.1;
        proxy_pass http://backend;
    }

    location / {
        client_max_body_size 50M;
        proxy_set_header Connection "";
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Frame-Options SAMEORIGIN;
        proxy_set_header Early-Data $ssl_early_data;
        proxy_buffers 256 16k;
        proxy_buffer_size 16k;
        proxy_read_timeout 600s;
        proxy_cache mattermost_cache;
        proxy_cache_revalidate on;
        proxy_cache_min_uses 2;
        proxy_cache_use_stale timeout;
        proxy_cache_lock on;
        proxy_http_version 1.1;
        proxy_pass http://backend;
    }


}
