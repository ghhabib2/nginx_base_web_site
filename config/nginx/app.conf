upstream backend {
    #instead of using round-robin
    ip_hash;
    #instead of using round-robin

    server app1:9000;
    server app2:9000;
    server app3:9000;
    server app4:9000;
}
upstream docker_phpmyadmin {
    #instead of using round-robin
    # ip_hash;
    #instead of using round-robin
    server phpmyadmin:443;
}

server {
    listen 80;
    server_name localhost;
    return 301 https://$server_name$request_uri;
}

server {
    server_name localhost;
    listen 443 ssl http2;
    # disable nginx version
    server_tokens off;
    # disable nginx version
    
    root /var/www;

    location ~ /phpmyadmin/ {
        # (START) some queries don't work when modsecurity is on
        modsecurity off; 
        # (END) some queries don't work when modsecurity is on
        index index.php;

        # (START) large databases might demand longe time and large memory
        client_max_body_size 100m;
        client_body_buffer_size 10M;
        proxy_read_timeout 6000;
        proxy_send_timeout 6000;
        # (END) large databases might demand longe time and large memory

        rewrite ^/phpmyadmin(/.*)$ $1 break;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header Host $host;
        proxy_pass https://docker_phpmyadmin;
        # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        # proxy_set_header X-Forwarded-Proto https;
        # proxy_redirect off;
    }


    modsecurity on;
    modsecurity_rules_file /etc/nginx/modsec/main.conf;

    # distributing load among the following servers

    # location / {
    #     root   /var/www;
    #     index  index.php;
    # }
    location / {
        index index.php;
        try_files $uri $uri/ /index.php;
    }
    # location / {
    #     proxy_pass http://backend;
    # deny all but a certain ip
    #allow 192.168.1.163/32;
    #deny all;
    # deny all but a certain ip

    # Authentication
    # auth_basic on; user1:HelloWorld123
    # auth_basic_user_file /var/www/.nginxusers;
    # Authentication
    # }

    # self-issued ssl certificate
    ssl_certificate /usr/ssl/test-ssl.crt;
    ssl_certificate_key /usr/ssl/test-ssl.key;
    ssl_protocols TLSv1.2;
    # self-issued ssl certificate

    # optimizing the server work load
    ssl_session_timeout 15m;
    ssl_session_cache shared:SSL:50m;

    client_body_buffer_size 1k;
    client_header_buffer_size 1k;
    client_max_body_size 500k;
    large_client_header_buffers 2 4k;
    # optimizing the server work load

    #prevent clickjacking
    add_header X-Frame-Options "SAMEORIGIN";
    #prevent clickjacking

    # impose ssl
    add_header Strict-Transport-Security "max-age=31536000; includeSubdomains; preload";
    # impose ssl

    #impose content security policy
    add_header X-XSS-Protection "1;mode=block";
    #impose content security policy


    error_log /var/log/nginx/error.log;
    access_log /var/log/nginx/access.log;

    error_page 404 error.html;
    location = /error.html {
        root /var/www;
    }


    location ~* \.(ico|css|js|gif|jpe?g|png)$ {
        expires 10d;
    }

    location = error2.html {
        root /var/www/engloset/;
    }
    # location ~* .*(/engloset/).* {
    #     try_files $uri =404;
    #     fastcgi_pass backend;
    #     # fastcgi_index index.php;
    #     # fastcgi_param  SCRIPT_FILENAME /var/www/html/engloset$fastcgi_script_name;
    #     fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    #     include fastcgi_params;

    #     error_page 404 error2.html;
    # }

    location ~* \.php$ {
        try_files $uri =404;
        fastcgi_pass backend;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        include fastcgi_params;
    }

    location ~* /\.ht {
        deny all;
    }
}
