upstream backend {
     ip_hash;server dockerized-nginx-php-mysql-phpmyadmin-mailcow-app-1:9000;
server dockerized-nginx-php-mysql-phpmyadmin-mailcow-app-2:9000;
server dockerized-nginx-php-mysql-phpmyadmin-mailcow-app-3:9000;
server dockerized-nginx-php-mysql-phpmyadmin-mailcow-app-4:9000;
server dockerized-nginx-php-mysql-phpmyadmin-mailcow-app-5:9000;
}
upstream docker_phpmyadmin {
    server phpmyadmin:443;
}
upstream docker_nginx_mailcow {
    server mailcowdockerized-nginx-mailcow-1:8443;
}
server {
    listen 80;
    server_name localhost;
    location = /robots.txt {
        add_header Content-Type text/plain;
        return 200 "User-agent: *\nDisallow: /";
    }
    if ($http_x_forwarded_proto = "http") {
        return 301 https://$server_name$request_uri;
    }
}
server {
    server_name localhost;
    listen 443 ssl http2;
    # disable nginx version
    server_tokens off;
    # disable nginx version
    location = /robots.txt {
        add_header Content-Type text/plain;
        return 200 "User-agent: *\nDisallow: /";
    }
    root /var/www;

    location ^~ /phpmyadmin/ {
        # (START) some queries don't work when modsecurity is on
        modsecurity off;
        # (END) some queries don't work when modsecurity is on


        # (START) large databases might demand long time and large memory
        client_max_body_size 100m;
        client_body_buffer_size 10M;
        proxy_read_timeout 6000;
        proxy_send_timeout 6000;
        # (END) large databases might demand long time and large memory

        rewrite /phpmyadmin/?(.*)$ /$1 break;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header Host $host;
        proxy_pass https://docker_phpmyadmin;
        proxy_redirect off;


        # deny all but a certain ip
        #allow 192.168.1.163/32;
        #deny all;
        # deny all but a certain ip
        # Authentication
        # auth_basic on; user1:HelloWorld123
        # auth_basic_user_file /var/www/.nginxusers;
        # Authentication
    }

    # location ^~ /mailcow {

    #     rewrite /mailcow/?(.*)$ /$1 break;
    #     proxy_set_header X-Real-IP $remote_addr;
    #     proxy_set_header X-Forwarded-For $remote_addr;
    #     proxy_set_header Host $host;
    #     proxy_pass https://docker_nginx_mailcow;
    #     sub_filter 'action="/'  'action="/mailcow/';
    #     sub_filter 'href="/'  'href="/mailcow/';
    #     sub_filter 'src="/'  'src="/mailcow/';
    #     sub_filter_once off;
    # }
    modsecurity on;
    modsecurity_rules_file /etc/nginx/modsec/main.conf;

    location / {
        index index.php;
        try_files $uri $uri/ /index.php;
    }
    # self-issued ssl certificate
    ssl_certificate /usr/ssl/test-ssl.crt;
    ssl_certificate_key /usr/ssl/test-ssl.key;
    ssl_protocols TLSv1.2;
    # self-issued ssl certificate

    # optimizing the server work load
    ssl_session_timeout 15m;
    ssl_session_cache shared:SSL:50m;

    client_body_buffer_size 1k;
    client_header_buffer_size 1k;
    client_max_body_size 500k;
    large_client_header_buffers 2 4k;
    # optimizing the server work load

    #prevent clickjacking
    add_header X-Frame-Options "SAMEORIGIN";
    #prevent clickjacking

    # impose ssl
    add_header Strict-Transport-Security "max-age=31536000; includeSubdomains; preload";
    # impose ssl

    #impose content security policy
    add_header X-XSS-Protection "1;mode=block";
    #impose content security policy


    error_log /var/log/nginx/error.log;
    access_log /var/log/nginx/access.log;

    error_page 404 error.html;
    location = /error.html {
        root /var/www;
    }


    location ~* \.(ico|css|js|gif|jpe?g|png)$ {
        expires 10d;
    }


    # (START) distributing load among different servers
    location ~* \.php$ {
        include fastcgi_params;
        try_files $uri $uri/ /index.php?$args;
        fastcgi_index index.php?$args;
        fastcgi_param QUERY_STRING $query_string;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_pass backend;
    }
    # (END) distributing load among the following servers

    location ~* /\.ht {
        deny all;
    }
}
server {
    listen 80;
    server_name mail.localhost;
    location = /robots.txt {
        add_header Content-Type text/plain;
        return 200 "User-agent: *\nDisallow: /";
    }
    return 301 https://$server_name$request_uri;
}
server {
    server_name mail.localhost;
    listen 443 ssl http2;
    # self-issued ssl certificate
    ssl_certificate /usr/ssl/test-ssl.crt;
    ssl_certificate_key /usr/ssl/test-ssl.key;
    ssl_protocols TLSv1.2;
    # self-issued ssl certificate
    proxy_buffer_size 128k;
    proxy_buffers 64 512k;
    proxy_busy_buffers_size 512k;
    location = /robots.txt {
        add_header Content-Type text/plain;
        return 200 "User-agent: *\nDisallow: /";
    }
    location / {
        proxy_pass https://docker_nginx_mailcow;
    }
}