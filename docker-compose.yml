version: '3.7'

services:
  app1:
    hostname: app1_hostname
    build: 
      context: .
      dockerfile: php.Dockerfile
    image: my_app_image
    container_name: my_app_container_1
    restart: unless-stopped
    environment:
      - TZ=asia/tehran
    volumes:
      - ./app_files:/var/www
    depends_on:
      - db
  app2:    
    hostname: app2_hostname
    build: 
      context: .
      dockerfile: php.Dockerfile
    image: my_app_image
    container_name: my_app_container_2
    restart: unless-stopped
    environment:
          - TZ=asia/tehran
    volumes:
      - ./app_files:/var/www
    depends_on:
      - db
  app3:    
    hostname: app3_hostname
    build: 
      context: .
      dockerfile: php.Dockerfile
    image: my_app_image
    container_name: my_app_container_3
    restart: unless-stopped
    environment:
        - TZ=asia/tehran          
    volumes:
      - ./app_files:/var/www
    depends_on:
      - db
  app4:    
    hostname: app4_hostname
    build: 
      context: .
      dockerfile: php.Dockerfile
    image: my_app_image
    container_name: my_app_container_4
    restart: unless-stopped
    environment:
          - TZ=asia/tehran
    volumes:
      - ./app_files:/var/www
    depends_on:
      - db
  db:
    hostname: db_hostname
    build: 
      context: .
      dockerfile: mysql.Dockerfile
    image: my_db_image
    container_name: container_mysql
    environment:
      - MYSQL_DATABASE=myTest
      - MYSQL_ROOT_PASSWORD=root123
      - MYSQL_USER=dev
      - MYSQL_PASSWORD=dev123               
      - TZ=Asia/Tehran
    restart: unless-stopped
    volumes:
      - ./data/backups:/var/backups
      # - ./data/mysql:/var/lib/mysql
  phpmyadmin:  
    hostname: phpmyadmin_hostname
    build: 
      context: .
      dockerfile: phpmyadmin.Dockerfile
    image: image_phpmyadmin
    container_name: phpmyadmin_container    
    restart: always
    environment:
      PMA_HOST: db
    depends_on:
      - db
    ports:
      - "5000:443"
  
  nginx:
    hostname: nginx_hostname
    build: 
      context: .
      dockerfile: nginx.Dockerfile
    image: nginx_image
    container_name: nginx_container
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    environment:
      - TZ=asia/tehran
    volumes:
      - ./app_files:/var/www
      - ./config/nginx:/etc/nginx/conf.d
    depends_on:
      - app1
      - app2
      - app3
      - app4
  postfixadmin:
    hostname: postfix_hostname
    build: 
      context: .
      dockerfile: postfix.Dockerfile
    depends_on:
      - db
    image: postfixadmin_image
    container_name: container_postfix
    ports:
      - 8000:80
    restart: unless-stopped
    environment:
      POSTFIXADMIN_DB_TYPE: mysqli
      POSTFIXADMIN_DB_HOST: db
      POSTFIXADMIN_DB_NAME: postfixadmin
      POSTFIXADMIN_DB_USER: root # Change in the future
      POSTFIXADMIN_DB_PASSWORD: root123 # Change in the future
# volumes:
#   mysql-data:
    

        