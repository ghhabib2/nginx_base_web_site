version: '3.7'

services:
  app:
    deploy:
      replicas: ${SCALE}
    build: 
      context: .
      dockerfile: php.Dockerfile
    image: my_app_image  
    restart: unless-stopped
    environment:
      - TZ=${TZ_V}
    volumes:
      - ./app_files:/var/www
    depends_on:
      - db
      - nginx
  db:
    hostname: db_hostname
    build: 
      context: .
      dockerfile: mysql.Dockerfile
    image: my_db_image
    container_name: container_mysql
    environment:
      - MYSQL_DATABASE=${DB_NAME}
      - MYSQL_ROOT_PASSWORD=${ROOT_PASS}
      - MYSQL_USER=${USER_NAME}
      - MYSQL_PASSWORD=${USER_PASS}
      - TZ=${TZ_V}
    restart: unless-stopped
    volumes:
      - ./data/backups:/var/backups
      - mysql-data:/var/lib/mysql
  phpmyadmin:  
    hostname: phpmyadmin_hostname
    build: 
      context: .
      dockerfile: phpmyadmin.Dockerfile
    image: image_phpmyadmin
    container_name: phpmyadmin_container    
    restart: always
    environment:
      PMA_HOST: db
      PMA_ABSOLUTE_URI: https://localhost/phpmyadmin
      MEMORY_LIMIT: -1
      UPLOAD_LIMIT: 512M
      MAX_EXECUTION_TIME: 0
    depends_on:
      - db
      - nginx  
  nginx:
    hostname: nginx_hostname
    build: 
      context: .
      dockerfile: nginx.Dockerfile
    image: nginx_image
    container_name: nginx_container
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    environment:
      - TZ=${TZ_V}
    volumes:
      - ./app_files:/var/www
      - ./config/nginx:/etc/nginx/conf.d
volumes:
   mysql-data:
    name: mysql-data
    external: true
    

        